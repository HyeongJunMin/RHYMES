<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="orderlog">	

	<!-- 매개변수로 받은 ID의 주문내역을 리턴 -->
	<select id="getOrderlogsById" parameterType="com.rhymes.app.member.model.mypage.MemberOrderPagingDTO"
	 resultType="com.rhymes.app.member.model.mypage.MemberOrderDTO">
		<include refid="getOrderlogsByIdSql"/></select>
	
		
	<!-- QUERY --> 	
 	<!-- 매개변수로 받은 ID의 주문내역을 리턴 -->
 	<sql id="getOrderlogsByIdSql">		
		SELECT RNUM, PAYMENT_CODE, USERID, COUNT, P_NAME, TOTALPRICE, PAYMENT_STATUS, RDATE
		FROM(
			SELECT @ROWNUM := @ROWNUM +1 AS RNUM, PAYMENT_CODE, USERID, COUNT, P_NAME, TOTALPRICE, PAYMENT_STATUS, RDATE
			FROM(
				SELECT  A.PAYMENT_CODE AS PAYMENT_CODE, A.USERID AS USERID, COUNT(*) AS COUNT, D.P_NAME AS P_NAME, A.TOTALPRICE AS TOTALPRICE, A.PAYMENT_STATUS AS PAYMENT_STATUS, A.RDATE AS RDATE
				FROM RHY_PAYMENT A, (SELECT * FROM RHY_PAYMENT_DETAILS ORDER BY PRICE) B, RHY_STORE_STOCK C, RHY_STORE_PRODUCT D 
				WHERE A.PAYMENT_CODE = B.PAYMENT_CODE AND B.S_SEQ = C.STOCK_SEQ AND C.P_SEQ = D.P_SEQ AND A.USERID=#{userid}
				GROUP BY A.PAYMENT_CODE
				ORDER BY B.PRICE DESC) AA, (SELECT @ROWNUM :=0) BB
			) AAA
		LIMIT #{startSeq }, #{recordCountPerPage}
 	</sql>
 	
 	
	
</mapper>




